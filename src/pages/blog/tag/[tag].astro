---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import ArticleList from '../../../components/ArticleList.astro';
import { SITE_TITLE } from '../../../consts';
import { getCollection } from 'astro:content';
import { normalizeTag, formatTag } from '../../../utils/tags';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = [...new Set(posts.flatMap((post) => post.data.tags))];

  return tags.map((tag) => ({
    params: { tag: normalizeTag(tag) },
    props: {
      tag,
      posts: posts
        .filter((post) => post.data.tags.includes(tag))
        .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()),
    },
  }));
}

const { tag } = Astro.props;
const { posts } = Astro.props;

// Format tag for display
const formattedTag = formatTag(tag);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={`${formattedTag} | ${SITE_TITLE}`}
      description={`Articles tagged with ${formattedTag}`}
    />
  </head>
  <body class="bg-stone-50 text-stone-900 min-h-screen flex flex-col">
    <Header />
    <main class="flex-1 w-full">
      <div class="relative">
        <!-- Background -->
        <div class="absolute inset-0">
          <div
            class="absolute inset-0 bg-gradient-to-b from-stone-100/50 via-stone-50/50 to-transparent"
          >
          </div>
          <div
            class="absolute inset-0 bg-[radial-gradient(circle_at_top_right,rgba(0,0,0,0.02),transparent_70%)]"
          >
          </div>
        </div>

        <!-- Top border -->
        <div
          class="absolute top-0 w-full h-px bg-gradient-to-r from-transparent via-stone-200/50 to-transparent"
        >
        </div>

        <div class="relative max-w-6xl mx-auto px-6 py-24 md:py-32">
          <!-- Header -->
          <div class="relative mb-16 sm:mb-24">
            <div class="relative max-w-xl">
              <div class="inline-flex items-center gap-3 mb-8">
                <span class="w-8 h-px bg-stone-400"></span>
                <span class="font-mono text-sm text-stone-500 tracking-wider">
                  {posts.length}
                  {posts.length === 1 ? 'Entry' : 'Entries'}
                </span>
              </div>
              <div class="flex items-baseline gap-4 mb-12">
                <h1
                  class="font-primary text-4xl sm:text-6xl md:text-7xl text-stone-900 leading-[1.15] tracking-wider"
                >
                  {formattedTag}
                </h1>
                <div class="relative pl-4">
                  <span class="absolute left-0 top-1/2 -translate-y-1/2 w-px h-8 bg-stone-400"
                  ></span>
                  <span class="font-mono text-sm tracking-wider text-stone-400">tag</span>
                </div>
              </div>
              <p class="text-base sm:text-lg text-stone-600 leading-relaxed max-w-lg">
                A collection of articles tagged with "{formattedTag}".
              </p>
            </div>
          </div>

          {
            posts.length > 0 ? (
              <ArticleList posts={posts} showHeader={false} />
            ) : (
              <div class="py-32 pl-12">
                <p class="font-primary text-3xl text-stone-600 leading-relaxed">
                  No entries found.
                  <br />
                  Check back soon for updates.
                </p>
              </div>
            )
          }
        </div>

        <!-- Bottom border -->
        <div
          class="absolute bottom-0 w-full h-px bg-gradient-to-r from-transparent via-stone-200/50 to-transparent"
        >
        </div>
      </div>
    </main>
    <Footer />
  </body>
</html>
