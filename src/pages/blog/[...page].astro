---
import type { GetStaticPaths, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import ArticleList from '../../components/ArticleList.astro';
import { SITE_TITLE, SITE_DESCRIPTION, BLOG_CONFIG } from '../../consts';
import { getCollection } from 'astro:content';

// Pagination configuration
export const getStaticPaths = (({ paginate }) => {
	const posts = getCollection('blog').then(posts =>
		posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	);
	return posts.then(sortedPosts => paginate(sortedPosts, { pageSize: BLOG_CONFIG.postsPerPage }));
}) satisfies GetStaticPaths;

type Props = {
	page: Page<CollectionEntry<'blog'>>;
};

const { page } = Astro.props;
const totalPages = page.lastPage;
const currentPage = page.currentPage;

// Generate pagination numbers with ellipsis
function generatePaginationNumbers(current: number, total: number) {
	const delta = 1; // Number of pages to show on each side of current page
	const range = [];

	for (let i = 1; i <= total; i++) {
		if (
			i === 1 || // First page
			i === total || // Last page
			(i >= current - delta && i <= current + delta) // Pages around current
		) {
			range.push(i);
		} else if (range[range.length - 1] !== null) {
			range.push(null); // Add ellipsis
		}
	}

	return range;
}

const paginationNumbers = generatePaginationNumbers(currentPage, totalPages);

// Generate the page title
const pageTitle = currentPage === 1
	? `${BLOG_CONFIG.journal.title} | ${SITE_TITLE}`
	: `${BLOG_CONFIG.journal.title} - Page ${currentPage} | ${SITE_TITLE}`;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead
			title={pageTitle}
			description={SITE_DESCRIPTION}
		/>
	</head>
	<body class="bg-stone-50 text-stone-900 min-h-screen flex flex-col">
		<Header />
		<main class="flex-1 w-full">
			<div class="relative">
				<!-- Background -->
				<div class="absolute inset-0">
					<div class="absolute inset-0 bg-gradient-to-b from-stone-100/50 via-stone-50/50 to-transparent"></div>
					<div class="absolute inset-0 bg-[radial-gradient(circle_at_top_right,rgba(0,0,0,0.02),transparent_70%)]"></div>
				</div>

				<div class="relative max-w-6xl mx-auto px-6 py-24 md:py-32">
					<div class="relative">
						<!-- Header (only show on first page) -->
						{currentPage === 1 && (
							<div class="mb-16 sm:mb-24">
								<div class="relative max-w-xl">
									<div class="inline-flex items-center gap-3 mb-8">
										<span class="w-8 h-px bg-stone-200"></span>
										<span class="font-mono text-sm text-stone-500 tracking-tight">
											{page.total} {page.total === 1 ? 'Entry' : 'Entries'}
										</span>
									</div>
									<h1 class="font-primary text-4xl sm:text-6xl md:text-7xl text-stone-900 leading-[1.15] tracking-tight mb-12">
										{BLOG_CONFIG.journal.title}
									</h1>
									<p class="text-base sm:text-lg text-stone-600 leading-relaxed max-w-lg">
										{BLOG_CONFIG.journal.description}
									</p>
								</div>
							</div>
						)}

						<!-- Page Title (show on pages after first) -->
						{currentPage > 1 && (
							<div class="mb-32">
								<div class="relative max-w-xl">
									<div class="inline-flex items-center gap-3 mb-8">
										<span class="w-8 h-px bg-stone-200"></span>
										<span class="font-mono text-sm text-stone-500 tracking-tight">
											Page {currentPage} of {totalPages}
										</span>
									</div>
									<h1 class="font-primary text-4xl sm:text-6xl md:text-7xl text-stone-900 leading-[1.15] tracking-tight">
										{BLOG_CONFIG.journal.title}
									</h1>
								</div>
							</div>
						)}

						{page.data.length > 0 ? (
							<div class="space-y-32">
								<ArticleList posts={page.data} showHeader={false} />

								<!-- Pagination -->
								{totalPages > 1 && (
									<nav class="flex flex-col items-center gap-8" aria-label="Pagination">
										<!-- Previous/Next Links -->
										<div class="flex items-center gap-8 font-mono text-sm">
											{page.url.prev ? (
												<a href={page.url.prev} class="group inline-flex items-center gap-2 text-stone-500 hover:text-stone-800 transition-colors duration-300">
													<span class="w-8 h-px bg-stone-200 group-hover:w-12 group-hover:bg-stone-300 transition-all duration-300"></span>
													{BLOG_CONFIG.navigation.prevLabel}
												</a>
											) : (
												<span class="text-stone-400">{BLOG_CONFIG.navigation.prevLabel}</span>
											)}

											<!-- Page Numbers -->
											<div class="flex items-center gap-3">
												{paginationNumbers.map((num, index) => (
													num === null ? (
														<span data-index={`ellipsis-${index}`} class="font-mono text-sm text-stone-400">...</span>
													) : (
														<a
															href={num === 1 ? '/blog' : `/blog/${num}`}
															class={`font-mono text-sm transition-colors duration-300 ${
																num === currentPage
																	? 'text-stone-900'
																	: 'text-stone-500 hover:text-stone-800'
															}`}
															aria-current={num === currentPage ? 'page' : undefined}
														>
															{num}
														</a>
													)
												))}
											</div>

											{page.url.next ? (
												<a href={page.url.next} class="group inline-flex items-center gap-2 text-stone-500 hover:text-stone-800 transition-colors duration-300">
													{BLOG_CONFIG.navigation.nextLabel}
													<span class="w-8 h-px bg-stone-200 group-hover:w-12 group-hover:bg-stone-300 transition-all duration-300"></span>
												</a>
											) : (
												<span class="text-stone-400">{BLOG_CONFIG.navigation.nextLabel}</span>
											)}
										</div>
									</nav>
								)}
							</div>
						) : (
							<div class="py-32 pl-12">
								<p class="font-primary text-3xl text-stone-600 leading-relaxed">
									No entries found.<br/>Check back soon for updates.
								</p>
							</div>
						)}
					</div>
				</div>

			</div>
		</main>
		<Footer />
	</body>
</html>
